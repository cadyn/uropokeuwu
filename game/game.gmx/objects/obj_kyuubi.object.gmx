<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>3000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initilization
image_xscale = -1;
image_speed = 0.2;

select = 0;
start_flag = 0;
phase = 1;
pre_phase = 1;
s_no = 1;
s_total = 2;

ins_mark = instance_create(x,y-(sprite_get_height(sprite_index)/2),obj_mark);
ins_voice = instance_create(x,y-130,obj_voice);
ins_name = instance_create(x,bbox_top-30, obj_chara_name);
ins_name.myname = "[npc]九尾";
ins_name.text_color = c_aqua;

text_color = c_white;

opp_words = ds_map_create();
player_words = ds_map_create();
select_mes = ds_map_create();

speed_queue = ds_queue_create();

scr_chara_img("kyuubi_stand",0);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_kyuubi</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reaction words Scene1

opp_words[? "s1_p1"] = ds_queue_create(); //非接触時 ~ 接触時
player_words[? "s1_p1"] = ds_queue_create(); //非接触時 ~ 接触時
ds_queue_enqueue(opp_words[? "s1_p1"],100,"ふふ、活きの良い雄が来おったの♪",100,"[spr]kyuubi_stand_call,0","搾り取られたいのじゃろ？#早う来るのじゃ","これが儂の名器じゃぞぉ……？","骨抜きにしてやるかの、覚悟じゃぞ♪",10);
ds_queue_enqueue(player_words[? "s1_p1"],40,"……（お、大きな狐さん……）",10);

opp_words[? "s1_p2"] = ds_queue_create(); //進行中1
player_words[? "s1_p2"] = ds_queue_create(); //進行中1
ds_queue_enqueue(opp_words[? "s1_p2"],"[spr]kyuubi_bind_siro,0",0.1,"ほっほ…もう抜けんじゃろ♪","ふふ…主はいつ屈服するかのぅ？","儂の中は主のを歓迎しておるようじゃの♪","儂の中が暖かくて今にも出しそうな顔をしておるぞぉ？");
ds_queue_enqueue(player_words[? "s1_p2"],60,"何これっ…良すぎ……てっ……","あっ……うぅ……で、出ちゃう///","や、やだっ……動かないでっ///","暖かい///");

select_mes[? "s1_0"] = "もがく";
select_mes[? "s1_1"] = "諦める";

opp_words[? "s1_p3"] = ds_queue_create();
player_words[? "s1_p3"] = ds_queue_create();
player_words[? "s1_p3_0"] = ds_queue_create(); //選択肢 0/1 YES/NO
player_words[? "s1_p3_1"] = ds_queue_create(); //選択肢 0/1 YES/NO
ds_queue_enqueue(opp_words[? "s1_p3"],"主のは儂の中で出したいようじゃぞ？#いいのかえ？");
ds_queue_enqueue(player_words[? "s1_p3"],400,"…………"); //Time out
ds_queue_enqueue(player_words[? "s1_p3_0"],10,"や、やっぱりだめ…っ　こんなの……っ",50);
ds_queue_enqueue(player_words[? "s1_p3_1"],10,"うぅ…………　もう…………",50);


opp_words[? "s1_p4_0"] = ds_queue_create(); //進行中2_YES
player_words[? "s1_p4_0"] = ds_queue_create(); //進行中2_YES
ds_queue_enqueue(opp_words[? "s1_p4_0"],"[spr]kyuubi_bind_siro,1","逃がさぬ♪　干涸びるまで搾取じゃ♪",400,"ではそろそろ子種を頂くとしようかの？",0.2);
ds_queue_enqueue(player_words[? "s1_p4_0"],30,"凄く……っ……絡みついて……くる……っ///","すご……い……っ","や…………っ");
opp_words[? "s1_p5_0"] = ds_queue_create(); //フィニッシュ_YES
player_words[? "s1_p5_0"] = ds_queue_create(); //フィニッシュ_YES
ds_queue_enqueue(opp_words[? "s1_p5_0"],"[spr]kyuubi_bind_siro,2",0.15,0.15,0.20,0.20,0.25,0.25,"んふふふ♪#出ておる、出ておる♪");
ds_queue_enqueue(opp_words[? "s1_p5_0"],"[spr]kyuubi_bind_siro,1",0.25,0.25,0.25,0.25,0.25,"もっとじゃ、もっと出すのじゃ♪",10,"[spr]kyuubi_bind_siro,2",0.3,0.3,0.3,0.1,0);
ds_queue_enqueue(player_words[? "s1_p5_0"],"～～～～～～～～！！",200,"やっ　らぁ……… もう出な…………っ",50,"あっ　あっ　あ……っ……");

opp_words[? "s1_p4_1"] = ds_queue_create(); //進行中2_NO
player_words[? "s1_p4_1"] = ds_queue_create(); //進行中2_NO
ds_queue_enqueue(opp_words[? "s1_p4_1"],"[spr]kyuubi_bind_siro,1","つまらぬのう、もうばててしまったのかえ？",0.15,"せめて一搾りくらいさせるのじゃ",0.2);
ds_queue_enqueue(player_words[? "s1_p4_1"],30,"あう……#あ……っ","やめ……　てえ……っ","壊れちゃっ…………");
opp_words[? "s1_p5_1"] = ds_queue_create(); //フィニッシュ_NO
player_words[? "s1_p5_1"] = ds_queue_create(); //フィニッシュ_NO
ds_queue_enqueue(opp_words[? "s1_p5_1"],"[spr]kyuubi_bind_siro,2",0.2,0.15,0.1,"♪♪♪",0.05,"[spr]kyuubi_bind_siro,3",0);
ds_queue_enqueue(opp_words[? "s1_p5_1"],50,"温いじゃろう？#呑み込まれていく気分はどうじゃ？",50,"[player]えっ　やっ　そんな…………！！",150,"[player]んむぅ…………っ",50,"ふふふ　ほれ、どんどん入ってしまうぞ？");
ds_queue_enqueue(opp_words[? "s1_p5_1"],"[spr]kyuubi_bind_siro,4",0.05);
for(var i = 0; i &lt; 20; i++){
    var mes = choose("ほれほれ、とても柔らかいじゃろう……","たっぷり儂の中を味わうが良い♪","気持ち良過ぎて出たくないかえ♪","このまま儂の仔にしてしまうかえ……","ふむ？中で温いものを感じたのう#もっと出しもいいのじゃぞ♪");
    ds_queue_enqueue(opp_words[? "s1_p5_1"],mes);
}
ds_queue_enqueue(player_words[? "s1_p5_1"],"あぁ……#やぁ……っ");

opp_words[? "s1_p6_0"] = ds_queue_create(); //事後
player_words[? "s1_p6_0"] = ds_queue_create(); //事後
ds_queue_enqueue(opp_words[? "s1_p6_0"],"[spr]kyuubi_stand,0","すっかり儂の名器にご満悦じゃったな♪",0.1,50);
ds_queue_enqueue(player_words[? "s1_p6_0"],"[spr]siro_down,0","はぁっ………#はぁっ………………",0.05);

/*
//NOの場合、事後ルート無し
opp_words[? "s1_p6_1"] = ds_queue_create(); //事後
player_words[? "s1_p6_1"] = ds_queue_create(); //事後
ds_queue_enqueue(opp_words[? "s1_p6_1"],0.1,"ふふ、実に好かったぞ","私のを味わいたければ#また来るがいい",50);
ds_queue_enqueue(player_words[? "s1_p6_1"],"[spr]siro_down,0","…………#うぅ…………");
*/


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reaction words Scene2

opp_words[? "s2_p1"] = ds_queue_create(); //非接触時 ~ 接触時
player_words[? "s2_p1"] = ds_queue_create(); //非接触時 ~ 接触時
ds_queue_enqueue(opp_words[? "s2_p1"],"主も儂の中に入れなければ我慢できなくなったかえ？",50,"[spr]kyuubi_stand_call,0","またここに主は種付けしたそうじゃな♪","よしよし、たっぷり搾り取ってくれようぞ♪",10);
ds_queue_enqueue(player_words[? "s2_p1"],40,"……（もじもじ）",10);

opp_words[? "s2_p2"] = ds_queue_create(); //進行中1
player_words[? "s2_p2"] = ds_queue_create(); //進行中1
ds_queue_enqueue(opp_words[? "s2_p2"],"[spr]kyuubi_bind_siro,0",0.1,"儂のは全てを飲み干すぞ？","主のせいで中がすっかりとろとろじゃぞ？","ほれほれ、とても柔らかいじゃろう……","主の子種なぞ丸呑みじゃ♪");
ds_queue_enqueue(player_words[? "s2_p2"],60,"あっ……あったかい…………///","きもちいいよぉ…………","腰から下が……とけちゃいそう…………","ふにゃぁ…………///");

select_mes[? "s2_0"] = "搾られる";
select_mes[? "s2_1"] = "諦める";

opp_words[? "s2_p3"] = ds_queue_create();
player_words[? "s2_p3"] = ds_queue_create();
player_words[? "s2_p3_0"] = ds_queue_create(); //選択肢 0/1 YES/NO
player_words[? "s2_p3_1"] = ds_queue_create(); //選択肢 0/1 YES/NO
ds_queue_enqueue(opp_words[? "s2_p3"],"ふふ、元気良く脈動しておるの#また節操もなく出してしまうのかの？");
ds_queue_enqueue(player_words[? "s2_p3"],400,"…………"); //Time out
ds_queue_enqueue(player_words[? "s2_p3_0"],10,"お願い……します……っ#出させてぇ…………///",50);
ds_queue_enqueue(player_words[? "s2_p3_1"],10,"うぅ…………　もう…………",50);


opp_words[? "s2_p4_0"] = ds_queue_create(); //進行中2_YES
player_words[? "s2_p4_0"] = ds_queue_create(); //進行中2_YES
ds_queue_enqueue(opp_words[? "s2_p4_0"],"[spr]kyuubi_bind_siro,0","しようのない子じゃのう♪","望み通り出させてやろう♪","ほれほれ、出して良いぞ？良いぞ？",0.2);
ds_queue_enqueue(player_words[? "s2_p4_0"],30,"ぐにぐに……しぼられ……てっ…………","すご……い……っ","あっ……出ちゃ…………っ");
opp_words[? "s2_p5_0"] = ds_queue_create(); //フィニッシュ_YES
player_words[? "s2_p5_0"] = ds_queue_create(); //フィニッシュ_YES
ds_queue_enqueue(opp_words[? "s2_p5_0"],"[spr]kyuubi_bind_siro,0","主の子種なぞ丸呑みじゃ♪","[spr]kyuubi_bind_siro,2","[player]ああぁっ♥♥♥",0.15,0.15);
ds_queue_enqueue(opp_words[? "s2_p5_0"],"[spr]kyuubi_bind_siro,1",100,"[spr]kyuubi_bind_siro,2","[player]とまら…………#とまらないよぅ…………っ♥",0.20,0.20);
ds_queue_enqueue(opp_words[? "s2_p5_0"],"[spr]kyuubi_bind_siro,1",70,"[spr]kyuubi_bind_siro,2","[player]んっ……あは…………っ♥",0.10,0.10,0);
ds_queue_enqueue(player_words[? "s2_p5_0"],10,"あっ　あっ　♥");

opp_words[? "s2_p4_1"] = ds_queue_create(); //進行中2_NO
player_words[? "s2_p4_1"] = ds_queue_create(); //進行中2_NO
ds_queue_enqueue(opp_words[? "s2_p4_1"],"[spr]kyuubi_bind_siro,1","つまらぬのう、もうばててしまったのかえ？",0.15,"せめて一搾りくらいさせるのじゃ",0.2);
ds_queue_enqueue(player_words[? "s2_p4_1"],30,"あう……#あ……っ","やめ……　てえ……っ","壊れちゃっ…………");
opp_words[? "s2_p5_1"] = ds_queue_create(); //フィニッシュ_NO
player_words[? "s2_p5_1"] = ds_queue_create(); //フィニッシュ_NO
ds_queue_enqueue(opp_words[? "s2_p5_1"],"[spr]kyuubi_bind_siro,2",0.2,0.15,0.1,"♪♪♪",0.05,"[spr]kyuubi_bind_siro,3",0);
ds_queue_enqueue(opp_words[? "s2_p5_1"],50,"温いじゃろう？#呑み込まれていく気分はどうじゃ？",50,"[player]えっ　やっ　そんな…………！！",150,"[player]んむぅ…………っ",50,"ふふふ　ほれ、どんどん入ってしまうぞ？");
ds_queue_enqueue(opp_words[? "s2_p5_1"],"[spr]kyuubi_bind_siro,4",0.05);
for(var i = 0; i &lt; 20; i++){
    var mes = choose("ほれほれ、とても柔らかいじゃろう……","たっぷり儂の中を味わうが良い♪","気持ち良過ぎて出たくないかえ♪","このまま儂の仔にしてしまうかえ……","ふむ？中で温いものを感じたのう#もっと出しもいいのじゃぞ♪");
    ds_queue_enqueue(opp_words[? "s2_p5_1"],mes);
}
ds_queue_enqueue(player_words[? "s2_p5_1"],"あぁ……#やぁ……っ");

opp_words[? "s2_p6_0"] = ds_queue_create(); //事後
player_words[? "s2_p6_0"] = ds_queue_create(); //事後
ds_queue_enqueue(opp_words[? "s2_p6_0"],"[spr]kyuubi_stand,0",0.1,"まだまだ儂は満足しておらぬぞ♪",50);
ds_queue_enqueue(player_words[? "s2_p6_0"],"[spr]siro_down,0","はぁっ………♥#はぁっ………………♥♥",0.05);

/* NOの場合、事後ルート無し
opp_words[? "s2_p6_1"] = ds_queue_create(); //事後
player_words[? "s2_p6_1"] = ds_queue_create(); //事後
ds_queue_enqueue(opp_words[? "s2_p6_1"],"[spr]kyuubi_stand,0",0.1,"ふふ、実に好かったぞ","私のを味わいたければ#また来るがいい",50);
ds_queue_enqueue(player_words[? "s2_p6_1"],"[spr]siro_down,0","…………#うぅ…………");
*/


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///First set
global.opp_word = ds_queue_create();
global.player_word = ds_queue_create();
ds_queue_copy(global.opp_word,opp_words[? "s1_p1"]);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>blank</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>blank</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///セリフ出力　イメージ設定　タイマー設定　スピード設定
if(!ds_queue_empty(global.opp_word)){
    if(alarm[1] == -1 &amp;&amp; ins_voice.alarm[0] == -1){
        if( is_string(ds_queue_head(global.opp_word))){
            //可変イメージ設定
            if(string_copy(ds_queue_head(global.opp_word),1,5) == "[spr]"){
                if(ds_queue_empty(speed_queue) &amp;&amp; floor(image_index) &gt;= image_number - 1 || phase &lt;= 2  || phase &gt;= 6){
                    var spr = ds_queue_dequeue(global.opp_word);
                    var img_num = real(string_copy(spr,string_length(spr),1));
                    spr = string_replace(spr,"[spr]","");
                    spr = string_replace(spr,","+img_num,"");
                    scr_chara_img(spr,img_num);
                }
            } else {
                if(string_copy(ds_queue_head(global.opp_word),1,8) == "[player]"){
                    var tgt = obj_chara;
                } else{
                    var tgt = self;
                }
                //台詞出力
                with(tgt){
                    ins_voice.alarm[0] = -1;
                    ins_voice.visible = false;
                    var mes = string_replace(ds_queue_dequeue(global.opp_word),"[player]","");
                    scr_voice(mes);
                    alarm[1] = 200;
                }
            }
        }
    }
    
    if(!ds_queue_empty(global.opp_word)){
        if(is_real(ds_queue_head(global.opp_word))){
            if(ds_queue_head(global.opp_word) &gt;= 10){
                //可変タイマー設定
                alarm[1] = ds_queue_dequeue(global.opp_word);

            } else if(ds_queue_head(global.opp_word) &lt; 10){
                //可変速度値キュー格納
                ds_queue_enqueue(speed_queue,ds_queue_dequeue(global.opp_word));
            } else{
                //値が無効な場合のエスケープ処理
                var dump = ds_queue_dequeue(global.opp_word);
            }
        }
    }
}



if(!ds_queue_empty(global.player_word)){

    with(obj_chara){

        if(alarm[1] == -1 &amp;&amp; ins_voice.alarm[0] == -1){

            if( is_string(ds_queue_head(global.player_word))){
                //可変イメージ設定
                if(string_copy(ds_queue_head(global.player_word),1,5) == "[spr]"){
                    //if(ds_queue_empty(speed_queue) &amp;&amp; floor(image_index) &gt;= image_number - 1){
                        var spr = ds_queue_dequeue(global.player_word);
                        var img_num = real(string_copy(spr,string_length(spr),1));
                        spr = string_replace(spr,"[spr]","");
                        spr = string_replace(spr,","+img_num,"");
                        scr_chara_img(spr,img_num);  
                        opp_img = sprite_index; //playerの描画処理用変数
                    //}
                } else {
                        //台詞出力
                        ins_voice.alarm[0] = -1;
                        ins_voice.visible = false;
                        var mes = ds_queue_dequeue(global.player_word);
                        scr_voice(mes);
                        alarm[1] = 200;
                }
            }

        }
        
        if(!ds_queue_empty(global.player_word)){
            if(is_real(ds_queue_head(global.player_word))){
                if(ds_queue_head(global.player_word) &gt;= 10){
                    //可変タイマー設定
                    alarm[1] = ds_queue_dequeue(global.player_word);

                } else if(ds_queue_head(global.player_word) &lt; 10){
                    //可変速度
                    image_speed = ds_queue_dequeue(global.player_word);
                } else{
                    //値が無効な場合のエスケープ処理
                    var dump = ds_queue_dequeue(global.player_word);
                }

            }
        }
    }

}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///行為中のプレイヤー非表示処理　セリフ位置調整

if(phase &gt; 1 &amp;&amp; phase &lt; 7){
    obj_chara.visible = false;
    obj_chara.ins_name.visible = false;
}
obj_chara.ins_voice.y = y + 20;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///マーク位置調整
ins_mark.image_xscale = -image_xscale*2;
ins_mark.x = x+(50*-image_xscale);
ins_mark.y = y-70;

ins_name.x = x-floor(string_width(ins_name.myname)/2);
ins_name.y = y-sprite_get_height(sprite_index)-20;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///接触前用エスケープ処理
if(phase == 1 &amp;&amp; ds_queue_size(global.opp_word) == 2){
    if(alarm[1] &lt;= 10){
        alarm[1] = 10;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///接触時イベント発火処理
var opp = collision_circle(x,y,floor(sprite_height/2),obj_chara,false,true);
if(opp != noone){
    
    if(phase == 1){
        var opp_name = chara_data[? "chara_name"]; 
        var name = obj_chara.chara_data[? "chara_name"];
        if( ds_queue_size(global.opp_word) &gt;= 2){        
            scr_mark(spr_mark_heart);
            alarm[1] = -1;
            ins_voice.alarm[0] = -1;
            //接触前用のメッセージ消去
            while(ds_queue_size(global.opp_word) &gt; 2){
                ds_queue_dequeue(global.opp_word);
            }
            ds_queue_copy(global.player_word,player_words[? "s"+s_no+"_p1"]);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///止めモーション用処理
if(image_speed == 0){
    image_index = image_number - 1;
    if(alarm[1] == -1){
        alarm[1] = 100;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///アニメーション終了毎に可変速度適用
if(!ds_queue_empty(speed_queue)){
    image_speed = ds_queue_dequeue(speed_queue);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Phase up / reset
if(ds_queue_empty(global.opp_word) &amp;&amp; ds_queue_empty(global.player_word) &amp;&amp; ds_queue_empty(speed_queue) &amp;&amp; alarm[1] == -1 &amp;&amp; obj_chara.alarm[1] == -1){
    if(image_index &gt;= image_number - 1 || phase == 1 || phase &gt;= 6){
        if(ins_voice.visible == false &amp;&amp; obj_chara.ins_voice.visible == false){
            phase += 1;
            image_speed = 0.1;
            obj_chara.image_speed = 0.1;
            //台詞読み込み
            if(phase != pre_phase){
                if(phase &gt;= 4){
                    ds_queue_copy(global.opp_word,opp_words[? "s"+string(s_no)+"_p"+string(phase)+"_"+string(select)]);
                    ds_queue_copy(global.player_word,player_words[? "s"+string(s_no)+"_p"+string(phase)+"_"+string(select)]);
                } else{
                    ds_queue_copy(global.opp_word,opp_words[? "s"+string(s_no)+"_p"+string(phase)]);
                    if(phase &gt;= 2){
                        ds_queue_copy(global.player_word,player_words[? "s"+string(s_no)+"_p"+string(phase)]);
                    }
                }
            }
            pre_phase = phase;
    
            //After finish
            if(phase == 6){
                with(obj_chara){
                    image_index = 0;
                    alarm[1] = -1;
                    ins_voice.alarm[0] = -1;
                }
            }
            //Reset
            if(phase == 7){
                //initilise variables
                alarm[1] = 210;
                phase = 0;
                select = 0;
                scr_keyconfig();
                with(obj_chara){
                    scr_chara_reset();
                }
                /*if(s_no &gt;= 2){
                
                    with(obj_chara){
                        chara_data[? "condition"] = "bote";
                        image_speed = 0.1;
                        move_x = 1;     
                    }       
                
                }*/
                ds_map_clear(global.player_word);
                if( s_total &gt; 1 ){
                    if(s_no &lt; s_total){
                        s_no += 1;
                    } else if(s_no &gt;= s_total){
                        s_no -= 1;                    
                    }
                }
                
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///フェーズコントロール
if(phase &gt; 1 &amp;&amp; phase &lt; 5){
    pre_phase = phase;
    global.key_config[? "left"] = "Prev scene";
    global.key_config[? "right"] = "Next scene";
    global.key_config[? "backspace"] = "Stop scene";
    global.key_config[? "left_col"] = c_white;
    global.key_config[? "right_col"] = c_white;
    if(phase == 3){
        global.key_config[? "left"] = "select";
        global.key_config[? "right"] = "select";
    } else{
        if(keyboard_check_pressed(vk_right)){
            phase += 1;
    
        } else if(keyboard_check_pressed(vk_left)){
            phase -= 1;
        }
        if(keyboard_check_pressed(vk_right) || keyboard_check_pressed(vk_left)){
            image_index = 0;
            alarm[1] = -1;
            ins_voice.alarm[0] = -1;
            ins_voice.visible = false;
            with(obj_chara){
                image_index = 0;
                alarm[1] = -1;
                ins_voice.alarm[0] = -1;
                ins_voice.visible = false;
            }
        }
    }

    //Quit binding
    if(keyboard_check_pressed(vk_backspace) ){
        with(obj_chara){
            scr_chara_reset();
        }
        scr_keyconfig();
        phase = 1;
        s_no = 1;
        select = 0;
        ds_queue_clear(global.player_word);
        ds_queue_clear(global.opp_word);
        ds_queue_clear(speed_queue);
    }
    
    if(pre_phase != phase){
        if(phase &gt;= 4){
            ds_queue_copy(global.opp_word,opp_words[? "s"+string(s_no)+"_p"+string(phase)+"_"+string(select)]);
            ds_queue_copy(global.player_word,player_words[? "s"+string(s_no)+"_p"+string(phase)+"_"+string(select)]);
        } else{
            ds_queue_copy(global.opp_word,opp_words[? "s"+string(s_no)+"_p"+string(phase)]);
            if(phase &gt;= 2){
                ds_queue_copy(global.player_word,player_words[? "s"+string(s_no)+"_p"+string(phase)]);
            }
        }
    }
    
}

if(phase &gt; 5){
    global.key_config[? "left_col"] = c_gray;
    global.key_config[? "right_col"] = c_gray;
    global.key_config[? "backspace"] = c_gray;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///フェーズコントロール表示
if(phase &gt; 1 &amp;&amp; phase &lt; 5){
    var meter_x1 = ins_name.x;
    var meter_x2 = meter_x1+15;

    for(var i = 0; i &lt; phase-1; i++){
        draw_rectangle_colour(meter_x1,ins_name.y-20,meter_x2,ins_name.y-30,c_red,c_red,c_red,c_red,false);
        meter_x1 += 20;
        meter_x2 = meter_x1+15;
    }
    
    meter_x1 = ins_name.x;
    meter_x2 = meter_x1+15;        
    for(var i = 0; i &lt; 4; i++){
        draw_rectangle_colour(meter_x1,ins_name.y-20,meter_x2,ins_name.y-30,c_black,c_black,c_black,c_black,true);
        meter_x1 += 20;
        meter_x2 = meter_x1+15;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///事後、player charaをベッド上に固定
if(phase == 6){
    with(obj_chara){
        ins_name.visible = true;
        chara_data[? "hp"] = 0;
        image_speed = 0.02;
        y = 374;
        vspeed = 0;
        gravity = 0;
        draw_sprite(opp_img,-1,x,y);
    }
    obj_chara.x = x-20;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Basic setting
draw_self();
p_draw_mask();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Select function(option)
if(phase == 3){
    if(ds_queue_size(player_words[? "s"+string(s_no)+"_p3"]) &gt; 0){
            
            if(!ds_queue_empty(global.player_word)){
                //Accept
                if(select == 0){
                    var sel_mes = "&gt;&gt;["+select_mes[? "s"+string(s_no)+"_0"]+"]  ["+select_mes[? "s"+string(s_no)+"_1"]+"]";
                    if(keyboard_check_pressed(vk_right)){select = 1;}

                }
                //Deny
                if(select == 1){
                    var sel_mes = "["+select_mes[? "s"+string(s_no)+"_0"]+"]  &gt;&gt;["+select_mes[? "s"+string(s_no)+"_1"]+"]";
                    if(keyboard_check_pressed(vk_left)){select = 0;}
                }
                
                if(keyboard_check_pressed(vk_enter)){
                    ds_queue_copy(global.player_word,player_words[? "s"+string(s_no)+"_p3_"+string(select)]);
                    
                };
                draw_text_outline(sel_mes,x-floor(string_width(sel_mes)/2),y+10);
            }

    } else{
        phase = 4;
    }
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
