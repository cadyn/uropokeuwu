<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>local_sprite_id = spr_dark;
// マスク用スプライトのサイズ
global.field_mask_blocks_bw = sprite_get_width(local_sprite_id);
global.field_mask_blocks_bh = sprite_get_height(local_sprite_id);
// マスク情報格納用配列のサイズ(画面を揺らしたりしてもいいように、四方それぞれ1ブロック大きめに)
global.field_mask_blocks_lw = ceil((global.field_mask_blocks_bw * 2 + view_wview[0]) / global.field_mask_blocks_bw);
global.field_mask_blocks_lh = ceil((global.field_mask_blocks_bh * 2 + view_hview[0]) / global.field_mask_blocks_bh);
// マスク情報格納用配列を作成
global.field_mask_blocks = ds_grid_create(global.field_mask_blocks_lw, global.field_mask_blocks_lh);

// 照明座標格納用配列
global.field_mask_light_px = ds_queue_create();
global.field_mask_light_py = ds_queue_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_queue_clear(global.field_mask_light_px);
ds_queue_clear(global.field_mask_light_py);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_grid_clear(global.field_mask_blocks, 0.9);

var lp = 0;
var px = 0;
var py = 0;
var dx = 0;
var dy = 0;
var r = 0;
var a = 0;
var a_base = 0;
// 登録された照明の数
var lpn = ds_queue_size(global.field_mask_light_px);
// 照明数分ループ
for(lp=0; lp&lt;lpn; lp++) {
    // 照明の座標
    px = floor(ds_queue_dequeue(global.field_mask_light_px) / global.field_mask_blocks_bw) + 1;
    py = floor(ds_queue_dequeue(global.field_mask_light_py) / global.field_mask_blocks_bh) + 1;
    // 照明の半径(半径とするブロック数が入っている)
    r = 10;
    // 照明倍率
    a_base = 0.9;
    // 周囲をボカす
    if(r &gt; 4) {
        ds_grid_multiply_region(global.field_mask_blocks, px - r + 3, py - r, px + r - 3, py - r, a_base);
        ds_grid_multiply_region(global.field_mask_blocks, px - r + 3, py + r, px + r - 3, py + r, a_base);
        ds_grid_multiply_region(global.field_mask_blocks, px - r, py - r + 3, px - r, py + r - 3, a_base);
        ds_grid_multiply_region(global.field_mask_blocks, px + r, py - r + 3, px + r, py + r - 3, a_base);
        r--;
        a_base -= 0.2;
    }
    if(r &gt; 3) {
        ds_grid_multiply_region(global.field_mask_blocks, px - r + 2, py - r, px + r - 2, py - r, a_base);
        ds_grid_multiply_region(global.field_mask_blocks, px - r + 2, py + r, px + r - 2, py + r, a_base);
        ds_grid_multiply_region(global.field_mask_blocks, px - r, py - r + 2, px - r, py + r - 2, a_base);
        ds_grid_multiply_region(global.field_mask_blocks, px + r, py - r + 2, px + r, py + r - 2, a_base);
        r--;
        a_base -= 0.2;
    }
    if(r &gt; 2) {
        ds_grid_multiply_region(global.field_mask_blocks, px - r + 1, py - r, px + r - 1, py - r, a_base);
        ds_grid_multiply_region(global.field_mask_blocks, px - r + 1, py + r, px + r - 1, py + r, a_base);
        ds_grid_multiply_region(global.field_mask_blocks, px - r, py - r + 1, px - r, py + r - 1, a_base);
        ds_grid_multiply_region(global.field_mask_blocks, px + r, py - r + 1, px + r, py + r - 1, a_base);
        r--;
        a_base -= 0.2;
    }
    if(r &gt; 1) {
        ds_grid_multiply_region(global.field_mask_blocks, px - r + 0, py - r, px + r - 0, py - r, a_base);
        ds_grid_multiply_region(global.field_mask_blocks, px - r + 0, py + r, px + r - 0, py + r, a_base);
        ds_grid_multiply_region(global.field_mask_blocks, px - r, py - r + 0, px - r, py + r - 0, a_base);
        ds_grid_multiply_region(global.field_mask_blocks, px + r, py - r + 0, px + r, py + r - 0, a_base);
        r--;
        a_base -= 0.2;
    }
    ds_grid_set_region(global.field_mask_blocks, px - r, py - r, px + r, py + r, 0.0);
}

var lpx = 0;
var lpy = 0;
dy = view_yview[0] - global.field_mask_blocks_bh;
for(lpy=0; lpy&lt;global.field_mask_blocks_lh; lpy++){
    dx = view_xview[0] - global.field_mask_blocks_bw;
    for(lpx=0; lpx&lt;global.field_mask_blocks_lw; lpx++) {
        a = ds_grid_get(global.field_mask_blocks, lpx, lpy);
        if(a &gt; 0) draw_sprite_ext(spr_dark, 0, dx, dy, 1.0, 1.0, 0.0, c_white, a);
        dx += global.field_mask_blocks_bw;
    }
    dy += global.field_mask_blocks_bh;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
