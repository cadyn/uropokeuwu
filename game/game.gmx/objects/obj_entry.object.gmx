<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_entry</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_init();
global.zoom = 1;
if(global.connect_flag == undefined){
    global.connect_flag = 0;
}
if(global.entry_flag == undefined){
    global.entry_flag = 0;
}
if(global.player_id == undefined){
    global.player_id = "player";
}

if(global.key_config == undefined){
    global.key_config = ds_map_create();
}

obj_infoboard.sprite_index = asset_get_index("spr_infoboard_"+game_name);

msg = -1;
select_status = -1;
if(global.player_name != undefined){
    msg = -1;
    select_status = 0;
}

global.username = "Anon";
ini_open("logindata.ini");
var user = ini_read_string("Login","User","");
if(user == "" || user == "null"){
    global.login_flag = false;
} else{
    global.login_flag = true;
    global.username = user;
}
ini_close();
            
            
global.ins_player = -1;
player_select = 0;
chosen_chara = 0;

login = -1;
spr = -1;

members = "";
loaded_no = 0;

mouse_img = spr_mouse;


chara_load_list = ds_queue_create();
file_load_list = ds_list_create();

if(global.chara_img == undefined){
    global.img_loaded_list = ds_map_create();
    global.img_info = ds_map_create();
    global.chara_img = ds_map_create();
    global.chara_list = ds_list_create();
    global.bind_list = ds_map_create();
    global.sp_list = ds_map_create();
    global.secret_chara = ds_map_create();
    global.add_list = ds_map_create();
    
    var file, str;
    if(game_name == "uropoke"){
        background_replace(bg_selectroom,"http://"+dom_name+img_path+"/etc/bg_selectroom.png",true,false);
        background_replace(bg_room,"http://"+dom_name+img_path+"/etc/bg_room.png",true,false);

        background_replace(bg_floor,"http://"+dom_name+img_path+"/etc/bg_floor.png",true,false);
        background_replace(bg_floor_surface,"http://"+dom_name+img_path+"/etc/bg_floor_surface.png",true,false);
        sprite_replace(spr_room_door,"http://"+dom_name+img_path+"/etc/spr_room_door.png",1,true,false,64,128);
        
    }
    if(game_name == "oricha"){

    }
    
//キャラ設定データ読み込み
    chara_data_get_all = http_post_string("/chara_data_get_all","get_all");
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>blank</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Toggle Mouse image
switch(mouse_img){
    case spr_mouse: mouse_img = spr_mouse_wheel; break;
    case spr_mouse_wheel: mouse_img = spr_mouse; break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///First flag set
if(global.entry_flag == 0){
    obj_CC.start_flag = -1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Load character images
/*
if(!ds_queue_empty(file_load_list) &amp;&amp; spr == -1){
    var spr_info = ds_queue_dequeue(file_load_list); //chara_name,type_name,file_info,file_name
    var tmp_chara_name = spr_info[| 0];
    var img_type = spr_info[| 1];
    var file_info = spr_info[| 2];
    var file_name = spr_info[| 3];
    var level = real(spr_info[| 4]);
    var load_flag = 1;
    
    if(string_copy(file_name,string_length(file_name)-3,4) == ".png"){
    //Load/Set image data
        if(!ds_map_exists(global.img_loaded_list,file_name)){
            spr = sprite_add("http://"+dom_name+img_path+"/chara/"+file_name,file_info[| 0],true,false,0,0);
            global.img_loaded_list[? file_name] = spr;
            global.img_info[? spr] = file_info;
        } else{
            spr = global.img_loaded_list[? file_name];
            load_flag = 0;
        }
        if(string_char_at(tmp_chara_name,1)=="["){
            tmp_chara_name = string_copy(tmp_chara_name,string_pos("]",tmp_chara_name)+1,string_length(tmp_chara_name));
        } else{
            if(img_type == "stand"){
            //Set first character list
                    global.chara[chara_no] = spr;
                    global.chara_name[chara_no] = tmp_chara_name;
                    chara_no += 1;
            }
        }

    } else{
        if(string_letters(file_name) == "charadata" ||string_letters(file_name) == "oppdata"  ){
            spr = string_letters(file_name)+":"+ds_list_write(file_info);
            load_flag = 0;
        }
        
    }

    if(!ds_map_exists(global.chara_img,tmp_chara_name+"_"+img_type)){
        global.chara_img[? tmp_chara_name+"_"+img_type] = ds_list_create();
    }
    ds_list_insert(global.chara_img[? tmp_chara_name+"_"+img_type],level,spr);

    if(load_flag == 0){
        spr = -1;
        loaded_no += 1;
    }

} else{

    //Entry name dialogue
    if(msg == -1 &amp;&amp; ds_queue_empty(file_load_list)){
        if(global.player_name == undefined || global.player_name == ""){
            msg = get_string_async("Player Name#(10 characters)", "");
            select_status = -1;   
        }
    }
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="63">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.entry_flag == 0){

    //entry name
    if(ds_map_find_value(async_load, "id") == msg){
        if(ds_map_find_value(async_load, "status")){
           if(ds_map_find_value(async_load, "result") != ""){
            global.player_name =  string_copy(ds_map_find_value(async_load, "result"),0,10);
            select_status = 0;
           } else{
            msg = get_string_async("Player Name#(10 characters)", "");
           }
        } else{
            msg = get_string_async("Player Name#(10 characters)", "");
        }
    }
    
    //login function (add character list)
    if(ds_map_find_value(async_load, "id") == login){
        
            global.username = ds_map_find_value(async_load, "username");
            var p = ds_map_find_value(async_load, "password");
            ini_open("logindata.ini");
            ini_write_string("Login", "User", global.username);
            ini_write_string("Login", "Password", p);
            ini_close();
            user_login = http_get('http://ouroporos.xsrv.jp/urocos_archive/php/phpBB3/chara_edit_auth.php?username='+global.username+'&amp;password='+p);

    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if(global.entry_flag == 0){

    //entry name
    if(ds_map_find_value(async_load, "id") == msg){
        if(ds_map_find_value(async_load, "status")){
           if(ds_map_find_value(async_load, "result") != ""){
            global.player_name =  string_copy(ds_map_find_value(async_load, "result"),0,10);
            select_status = 0;
           } else{
            msg = get_string_async("Player Name#(10 characters)", "");
           }
        } else{
            msg = get_string_async("Player Name#(10 characters)", "");
        }
    }
    
    //login function (add character list)
    if(ds_map_find_value(async_load, "id") == login){
        var u = ds_map_find_value(async_load, "username");
        var p = ds_map_find_value(async_load, "password");
        if(ds_map_exists(global.add_list, u)){
            show_message(u+" has been added already");
        } else{
            if(global.secret_chara[? u] == p &amp;&amp; global.secret_chara[? u] != 0){
                
                show_message(u+" added");
                var img_no = array_length_1d(global.chara);
                var name_no = array_length_1d(global.chara_name);
                global.chara_name[name_no] = u;
                global.add_list[? u] = spr;
    
            } else{
                if(ds_map_exists(global.secret_chara,u)){
                    show_message("Wrong password");
                } else{
                    show_message("Wrong password or wrong character name");
                }
            }
        }
    
    }
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///キャラデータ読み込み・登録

 if ds_map_find_value(async_load, "id") == chara_data_get_all
    {
    if ds_map_find_value(async_load, "status") == 0
       {
       var all_get_data = ds_map_find_value(async_load, "result");
       all_get_data = json_decode(all_get_data);

        
        //Read Image data
            chara_data_all = all_get_data[? "imgData"]; 
            
        //Read Character properties data
            chara_prop_all = all_get_data[? "propData"];
             
        //Read Character properties data
            chara_interact_all = all_get_data[? "interactData"]; 
                
            
            var tmp_chara_name = ds_map_find_first(chara_prop_all);
            
            for(var i = 0; i &lt; ds_map_size(chara_prop_all); i++){
                //隠しキャラの設定
                var approval = ds_map_find_value(chara_prop_all[? tmp_chara_name],"approval");
                if(approval == 0 || approval == 9){  //Approved or Default characters
                    var privacy = ds_map_find_value(chara_prop_all[? tmp_chara_name],"privacy");
                    if(privacy == 0 || privacy == 2){ //private:0 public:1 hidden:2
                        
                        global.secret_chara[? tmp_chara_name] = privacy;
                    }
                }
                tmp_chara_name = ds_map_find_next(chara_prop_all,tmp_chara_name);
                

            }
        
            
        //操作キャラリストの作成
            var chara_no = 0;
            var data_name = ds_map_find_first(chara_data_all);

            
            for(var i = 0; i &lt; ds_map_size(chara_data_all); i++){

                
                var type_name = ds_map_find_first(chara_data_all[? data_name]);
                for(var j = 0; j &lt; ds_map_size(chara_data_all[? data_name]); j++){
                    var bind_type = string_copy(type_name,1,string_pos("_",type_name)-1);
                    var chara_name = data_name;
                    var sp_type = "";
                    
                    var chara_interact = chara_interact_all[? chara_name];
                
                    if(string_letters(bind_type) == "bind"){
                        var opp_name = string_copy(type_name,string_pos("_",type_name)+1,string_length(type_name));
                        
                        if(string_char_at(bind_type,1)=="["){
                        //R18等の特殊シチュ分け
                            sp_type = string_copy(bind_type,string_pos("[",bind_type)+1,string_pos("]",bind_type)-string_pos("[",bind_type)-1);
                            bind_type = string_copy(bind_type,string_pos("]",bind_type)+1,string_length(bind_type));
                        }
                        
                        if( ds_map_exists(chara_interact[? "opponent"],opp_name)){
                            var bind_approval = ds_map_find_value(chara_interact[? "opponent"],opp_name);
                            if(bind_approval == 0){ //if this bind motion has been approved
                                if(!ds_map_exists(global.bind_list,chara_name+"_"+opp_name)){
                                    global.bind_list[? chara_name+"_"+opp_name] = ds_list_create();
                                }
                                var tmp = global.bind_list[? chara_name+"_"+opp_name];
                                tmp[| ds_list_size(tmp)] = bind_type;
                            }
                        }
                        
                    }
            
                    var file_info = ds_map_find_value(chara_data_all[? data_name],type_name);
                        
                    
                    var file_name = ds_map_find_first(file_info);
                    
                    for(var k = 0; k &lt; ds_map_size(file_info); k++){
                        var file_data = file_info[? file_name];
                        var level = k;
                        
                        if(string_copy(file_name,string_length(file_name)-3,4) == ".png"){
                        //Load/Set image data
                            if(!ds_map_exists(global.img_loaded_list,file_name)){
                                var spr = sprite_add("http://"+dom_name+img_path+"/chara/"+file_name,file_data[| 0],true,false,0,0);
                                ds_list_add(file_load_list,spr);
                                global.img_loaded_list[? file_name] = spr;
                                global.img_info[? spr] = file_data;
                                
                            } else{
                                var spr = global.img_loaded_list[? file_name];
                            }
                            if(!ds_map_exists(global.secret_chara,chara_name)){
                            
                                //未承認キャラの除外処理
                                var approval = ds_map_find_value(chara_prop_all[? chara_name],"approval");
                                if(approval != 1 &amp;&amp; approval != 2){ //approved:0 disapproved:1 waiting for approval:2 default:9
                                
                                //もし隠しキャラでなければPlayerリストに表示
                                    if(type_name == "stand"){
                                    //Set first character list
                                            global.chara[chara_no] = spr;
                                            global.chara_name[chara_no] = chara_name;
                                            chara_no += 1;
                                    }
                                }
                            }
                            if(sp_type == "18+"){
                                global.sp_list[? chara_name+"_"+opp_name] = sp_type;
                            }
                        
                        } else{
                            if(string_letters(file_name) == "charadata" ||string_letters(file_name) == "oppdata"  ){
                                var spr = string_letters(file_name)+":"+ds_list_write(file_data);
                            }
                            
                        }
                    
                        if(!ds_map_exists(global.chara_img,chara_name+"_"+type_name)){
                            if(sp_type != "") type_name = string_replace(type_name,"["+sp_type+"]","");
                            global.chara_img[? chara_name+"_"+type_name] = ds_list_create();
                        }
                        ds_list_insert(global.chara_img[? chara_name+"_"+type_name],level,spr);  
                        
                        
                        file_name = ds_map_find_next(file_info,file_name);
                    }            
            
                    type_name = ds_map_find_next(chara_data_all[? data_name],type_name);
                }
                data_name = ds_map_find_next(chara_data_all,data_name);
        
            }
            chara_no = 0;
            load_counts = ds_list_size(file_load_list);

            //if already logged in, load the user own approved characters
            if(global.login_flag == true){
                scr_login_chara_load();
            }
       }
    }
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get login data from the forum

if(ds_map_find_value(async_load, "id") == user_login){
    if(ds_map_find_value(async_load, "status") == 0){
        var result = ds_map_find_value(async_load, "result");
        
        result = string_replace(string_replace(result,"callback(",""),")","");
        result = json_decode(result);
        if(result[? 'flag'] == "CORRECT"){
            show_message("Logged in as "+ global.username);
            global.login_flag = true;
            scr_login_chara_load();
        } else{
            show_message("Login failed. Wrong username or password.");
            ini_open("logindata.ini");
            ini_key_delete("Login", "User");
            ini_key_delete("Login", "Password");
            ini_close();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Load character images

//spr_info: "chara_name",chara_img_type,"filename.png"/"situation",frames,xorigin,yorigin(,repeatflag)]
//if ds_map_find_value(async_load, "id") == spr
if(!ds_list_empty(file_load_list)){
    var spr = ds_map_find_value(async_load, "id");
    if(spr != undefined){
        var list_pos = ds_list_find_index(file_load_list,spr);
        if list_pos &gt; -1
            {
            if ds_map_find_value(async_load, "status") &gt;= 0
               {
               //Image set
                ds_list_delete(file_load_list, list_pos);
                   sprite_set_offset(spr,floor((sprite_get_width(spr)/sprite_get_number(spr))/2),sprite_get_height(spr));
                   var base_x = floor(sprite_get_width(spr)/sprite_get_number(spr)/2);
                   sprite_collision_mask(spr, true, 2, base_x-16, base_x+16 , sprite_get_height(spr)-32, sprite_get_height(spr), 3, 0);
                    loaded_no += 1;
                   //Initilization
                   //spr = -1;
        
                    if(ds_list_empty(file_load_list)){
                        //Entry name dialogue
                        if(msg == -1){
                            if(global.player_name == undefined || global.player_name == ""){
                                msg = get_string_async("Player Name#(10 characters)", "");
                                select_status = -1;   
                            }
                        }
                       
                    }
               }
            }
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Display entry information
if(global.entry_flag == 0){
    draw_background_tiled_ext(background5,0,0,1,1,c_white,0.8);
    var name_list = global.chara_name;
    
    if(select_status == 2){
        //Add Private character into NPC list
        var s_chara_name = ds_map_find_first(global.secret_chara);
        for(var i = 0; i &lt; ds_map_size(global.secret_chara); i++){
            if(global.secret_chara[? s_chara_name] == 0){
                name_list[array_length_1d(name_list)] = s_chara_name;
            }
            s_chara_name = ds_map_find_next(global.secret_chara,s_chara_name);
        }
    }
    var chara_counts = array_length_1d(name_list);
    
    //move cursor
    if((keyboard_check_pressed(vk_up) || mouse_wheel_up()) &amp;&amp; player_select &gt; 0){
        player_select -= 1;
    }
    if((keyboard_check_pressed(vk_down) || mouse_wheel_down()) &amp;&amp; player_select &lt; (chara_counts - 1) ){
        player_select += 1;
    }
    
    //draw titles
    text_color = title_c;
    text_outline_color = title_o_c;
    var title_str = string_upper(game_name);
    global.zoom = 2;
    title_x = floor(view_wview[0]/2) - floor((string_width(title_str)*global.zoom)/2);
    title_y = 40;
    draw_text_outline(title_str,title_x,title_y);
    global.zoom = 1;
    
    //draw 
    title_str = update;
    title_x = floor(view_wview[0]/2) - floor((string_width(title_str)*global.zoom)/2);
    title_y = 90;
    draw_text_outline(title_str,title_x,title_y);
    
    //選択後のキャラ表示
    
    if(select_status == 1){
        image_speed = 0.2;
        draw_sprite_ext(global.player_chara,-1,floor(view_wview[0]/2),floor(view_hview[0]/2)+sprite_get_height(global.player_chara),-2,2,0,c_white,1);
        if(global.connect_flag == 1){
            var mes1 = " OFFLINE ";
            var mes2 = " [ ONLINE ]";
            if(keyboard_check_pressed(vk_left)){
                global.connect_flag = 0;
            }
            if(keyboard_check_pressed(vk_enter)){
                global.entry_flag = 1;
                obj_CC.start_flag = 0;
                global.socket = ws_connect(global.server_url);
            }
    
            text_color = c_dkgray;
            draw_text_outline(mes1,floor(view_wview[0]/2) - floor((string_width(mes1)*global.zoom)) - 20,view_hview[0]-100);
            text_color = c_aqua;
            draw_text_outline(mes2,floor(view_wview[0]/2) + 20,view_hview[0]-100);
            var info = "-- Multi play --";
        } else{
            var mes1 = "[ OFFLINE ] ";
            var mes2 = " ONLINE ";
            if(keyboard_check_pressed(vk_right)){
                global.connect_flag = 1;
            }
            if(keyboard_check_pressed(vk_enter)){
                obj_CC.start_flag = 0;
                select_status = 2;
            }
    
            text_color = c_orange;
            draw_text_outline(mes1,floor(view_wview[0]/2) - floor((string_width(mes1)*global.zoom)) - 20,view_hview[0]-100);
            text_color = c_dkgray;
            draw_text_outline(mes2,floor(view_wview[0]/2) + 20,view_hview[0]-100);
            var info = "-- Single play --";

        }
        text_color = c_white;
        
        draw_text_outline(info,floor(view_wview[0]/2) - floor((string_width(info)*global.zoom)/2),view_hview[0]-120);
        if(keyboard_check_pressed(vk_backspace)){
            select_status -= 1;
            player_select = 0;
            global.player_chara = -1;
            global.player_chara_name = "";
            keyboard_clear(vk_backspace);
        }

        
    } else if(select_status == 0 || select_status == 2){
        //player box
        player_box_width = 100;
        player_box_height = 170;
        player_box_y = 150;
        player_img_y = floor(view_hview[0]/2)+sprite_get_height(global.player_chara);
    
        player_box_x = floor(view_wview[0]/2) - 150 - player_box_width;
        var box_title = "Player";   

        if(select_status == 2){
            draw_sprite(global.player_chara,-1,floor(view_wview[0]/2) - 150,player_img_y)
            player_box_x = floor(view_wview[0]/2) + 150;
            box_title = "NPC";
        }
        player_img_x = floor(view_wview[0]/2);
         
        //draw player box
        text_color = c_orange;
        draw_text_outline(box_title,player_box_x-40,player_box_y-25);


        
        text_color = c_white;
        draw_line_width_colour(player_box_x+(player_box_width/2),player_box_y,player_box_x+(player_box_width/2),player_box_y+player_box_height,player_box_width+50,c_black,c_black);
        
        //draw text on the player box
        var i = 0;
        var opp_pos_x = player_img_x;
        var list_text_position = player_box_y;
        
        repeat(chara_counts)
        {   
            list_text[i] = name_list[i];
            var spr_img = ds_list_find_value(global.chara_img[? list_text[i]+"_stand"],0);
            
            if(select_status == 2){
                if(ds_map_exists(global.bind_list, global.player_chara_name+"_"+name_list[i])){
                    list_text[i] = "★"+ list_text[i];
                }
                if(ds_map_exists(global.sp_list, global.player_chara_name+"_"+name_list[i])){
                    var mark = global.sp_list[? global.player_chara_name+"_"+name_list[i]];
                    list_text[i] = "["+mark+"]" + list_text[i];
                }
                if(ds_map_exists(global.sp_list, name_list[i]+"_"+global.player_chara_name)){
                    var mark = global.sp_list[? name_list[i]+"_"+global.player_chara_name];
                    list_text[i] = "["+mark+"]" + list_text[i];
                }
            }
            
            if(player_select == i){
                list_text[i] = "&gt; "+ list_text[i];
                image_speed = 0.2;
                draw_sprite_ext(spr_img,-1,player_img_x,player_img_y,-1,1,0,c_white,1);
                if(keyboard_check_pressed(vk_enter)){
                    if(select_status == 0){
                        global.player_chara = spr_img;
                        global.player_chara_name = name_list[i];
                        select_status = 1;
                    }
                    if(select_status == 2){
                        global.opponent_chara = spr_img;
                        global.opponent_chara_name = name_list[i];
                        select_status = 3;
                    }
                }
                if(keyboard_check_pressed(vk_backspace)){
                    if(select_status == 2){
                        select_status = 0;
                        player_select = 0;
                        global.player_chara = -1;
                        global.player_chara_name = "";
                        keyboard_clear(vk_backspace);
                    }                
                }
            }
            
            if(select_status == 0){
                if(ds_map_exists(global.bind_list,name_list[player_select]+"_"+name_list[i])){
                    spr_img = ds_list_find_value(global.chara_img[? name_list[i]+"_stand"],0);
                    draw_sprite_ext(spr_img,-1,opp_pos_x,player_img_y+sprite_get_height(spr_img)+40,-1,1,0,c_white,0.7);
                    draw_line_colour(player_img_x,player_img_y,opp_pos_x,player_img_y+40,c_red,c_red);
                    opp_pos_x += sprite_get_xoffset(spr_img) + 20;
                }
            }
            if(i == 0){
                list_pos[i] = player_box_y;
            }
            if(i &gt; 0){
                list_pos[i] = list_pos[i-1] + string_height(name_list[i-1])+5    
            }
            i += 1;
        }
        
    
        while(list_pos[player_select] &gt; ( player_box_y + player_box_height - 5 ))
        {
            var i = 0;
            repeat(chara_counts)
            {
                list_pos[i] -= string_height(name_list[i])+5;
                i += 1;
            }
        }
    
        
        var i = 0;
        var top_flag = 0;
        var bottom_flag = 0;
        repeat(chara_counts)
        {
            if(list_pos[i] &gt;= player_box_y &amp;&amp; list_pos[i]  &lt; ( player_box_y + player_box_height - 5 ) ){
                draw_text_outline(list_text[i],player_box_x,list_pos[i]);
            }
            if(list_pos[i] &lt; player_box_y &amp;&amp; top_flag == 0){
                draw_text_outline('^^^',player_box_x+30,player_box_y - 20);
                top_flag = 1;
            }
            if(list_pos[i]  &gt;= ( player_box_y + player_box_height - 5) &amp;&amp; bottom_flag == 0){
                draw_text_outline('vvv',player_box_x+30,player_box_y + player_box_height + 20);
                bottom_flag = 1;
            }    
            i += 1;
        }
    
    } else if(select_status == 3){
        image_speed = 0.2;
        draw_sprite_ext(global.player_chara,-1,floor(view_wview[0]/2)-150,floor(view_hview[0]/2)+sprite_get_height(global.player_chara),2,2,0,c_white,1);
        draw_sprite_ext(global.opponent_chara,-1,floor(view_wview[0]/2)+150,floor(view_hview[0]/2)+sprite_get_height(global.opponent_chara),-2,2,0,c_white,1);

        if(keyboard_check_pressed(vk_enter)){
            global.entry_flag = 1;
            if(room_exists(asset_get_index(global.opponent_chara_name+"_room"))){
                
            //一時認証チェック
                /*if(global.opponent_chara_name == "kyuubi"){
                    var pass = get_string("発注者の認証待ちです","");
                } else{
                    var pass = "seil9999"; //パスワード
                }*/
                
                //if(pass == "seil9999"){
                    if(ds_map_exists(global.sp_list, global.player_chara_name+"_"+global.opponent_chara_name)){
                        room_goto(asset_get_index(global.opponent_chara_name+"_room"));
                    } else{
                        room_goto(asset_get_index(global.opponent_chara_name+"_room"));
                    }
                /*} else{
                    global.entry_flag = 0;
                    select_status = 2;
                    global.opponent_chara = -1;
                }*/
            } else{
                room_goto(test_room);
            }
        }

        if(global.sp_list[? global.opponent_chara_name+"_"+global.player_chara_name] == "18+" ){
            text_color = c_fuchsia;
            var mes = "▼コンテンツ内容による年齢制限: あなたは１８歳以上ですか？";
            draw_text_outline(mes,floor(view_wview[0]/2) - floor((string_width(mes)*global.zoom)/2),view_hview[0]-160);
            mes = "▼NSFW WARNING: over 18 years old?▼";
            draw_text_outline(mes,floor(view_wview[0]/2) - floor((string_width(mes)*global.zoom)/2),view_hview[0]-140);
        }
        
        var info = "Single (Debug) mode";
        text_color = c_white;
        
        draw_text_outline(info,floor(view_wview[0]/2) - floor((string_width(info)*global.zoom)/2),view_hview[0]-120);
        if(keyboard_check_pressed(vk_backspace)){
            select_status -= 1;
            player_select = 0;
            global.opponent_chara = -1;
            global.opponent_chara_name = "";
            keyboard_clear(vk_backspace);
        }

        
    } 
    
    if(select_status &gt; -1){
    //Display information
        
        //Display mouse and arrows as control key
        if(alarm[0] == -1){
            alarm[0] = 20;
        }
        var mouse_alpha = 1;
        var arrow_alpha = 1;
        var bs_alpha = 1;
        var ent_alpha = 1;
        if(select_status == 1 || select_status == 3){
            var mouse_alpha = 0.5;
            var arrow_alpha = 0.5;        
        }
        
        var pos_x = (view_wview[0]/2)-50;
        var pos_y = view_hview[0]-70;
        draw_sprite_ext(mouse_img,0,pos_x,pos_y,1,1,1,c_white,mouse_alpha);
        pos_x += 40;
        pos_y += 10;
        draw_sprite_ext(spr_arrow,0,pos_x,pos_y,1,1,1,c_white,arrow_alpha);
        pos_y = pos_y + sprite_get_height(spr_arrow);
        draw_sprite_ext(spr_arrow,0,pos_x,pos_y,1,-1,1,c_white,arrow_alpha);
        pos_x += 20;
        pos_y -= 20;
        draw_sprite_ext(spr_enter,0,pos_x,pos_y,1,1,1,c_white,ent_alpha);
        pos_x += 20;
        draw_sprite_ext(spr_backspace,0,pos_x,pos_y,1,1,1,c_white,bs_alpha);        
                
        var txt = "Recommended browser: Google Chrome";
        text_color = c_yellow;
        draw_text_outline(txt,floor(view_wview[0]/2)-floor(string_width(txt)/2),view_hview[0]-30);
        text_color = c_ltgray;
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Button to login
var cursor_flag = 0;
var base_y = 0;

if(global.entry_flag == 0 &amp;&amp; select_status &gt;= 0 &amp;&amp; global.login_flag == false){
    var base_x = window_get_width()-200;
    base_y += 40;
    var str = "Login";
    var str_width = string_width(str);
    var btn_width = str_width+20;
    var btn_height = 30;

    //draw_text_colour(base_x+7,base_y+7,"Add New Character",c_black,c_black,c_black,c_black,1);
    if(mouse_x &gt; base_x &amp;&amp; mouse_x &lt; base_x + btn_width &amp;&amp; mouse_y &gt; base_y &amp;&amp; mouse_y &lt; base_y + btn_height){
        draw_roundrect_colour(base_x,base_y,base_x+btn_width,base_y+btn_height,c_aqua,c_aqua,false);
        cursor_flag = 1;
        if(mouse_check_button_pressed(mb_left)){
            if(global.entry_flag == 0 &amp;&amp; select_status == 0){
                if(global.login_flag == false){
                    login = get_login_async("Input forum_username/password","");
                } else{
                    show_message("You have already logged in");
                }
            }
        }
    } else{
        draw_roundrect_colour(base_x,base_y,base_x+btn_width,base_y+btn_height,c_gray,c_gray,false);    
    }
    draw_roundrect_colour(base_x,base_y,base_x+btn_width,base_y+btn_height,c_black,c_black,true);

    text_outline_color = c_black;
    text_color = c_white;
    draw_text_outline(str,base_x+7,base_y+7)
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Button to chara setting

if(global.entry_flag == 0 &amp;&amp; select_status &gt;= 0 &amp;&amp; global.login_flag == true){
    var base_x = window_get_width()-200;
    base_y += 40;
    var str = "Character Setting";
    var str_width = string_width(str);
    var btn_width = str_width+20;
    var btn_height = 30;

    //draw_text_colour(base_x+7,base_y+7,"Add New Character",c_black,c_black,c_black,c_black,1);
    if(mouse_x &gt; base_x &amp;&amp; mouse_x &lt; base_x + btn_width &amp;&amp; mouse_y &gt; base_y &amp;&amp; mouse_y &lt; base_y + btn_height){
        draw_roundrect_colour(base_x,base_y,base_x+btn_width,base_y+btn_height,c_aqua,c_aqua,false);
        cursor_flag = 1;
        if(mouse_check_button_pressed(mb_left)){
            url_open('http://'+dom_name+':52999/');
        }
    } else{
        draw_roundrect_colour(base_x,base_y,base_x+btn_width,base_y+btn_height,c_gray,c_gray,false);   
    }
    draw_roundrect_colour(base_x,base_y,base_x+btn_width,base_y+btn_height,c_black,c_black,true);

    text_outline_color = c_black;
    text_color = c_white;
    draw_text_outline(str,base_x+7,base_y+7)
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Display "loading images"
//if(!ds_queue_empty(file_load_list) &amp;&amp; select_status == -1){
if(!ds_list_empty(file_load_list) &amp;&amp; select_status == -1){
    var mes = "Loading image...["+string(loaded_no)+"/"+string(load_counts)+"]";
    text_color = c_aqua;
    draw_text_outline(mes,floor(view_wview[0]/2)-floor(string_width(mes)/2),floor(view_hview[0]/2)-floor(string_height(mes)/2));
    text_color = c_white;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change window cursor
if(cursor_flag == 1){
    window_set_cursor(cr_handpoint);
} else if(cursor_flag == 0){
    window_set_cursor(cr_default);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
